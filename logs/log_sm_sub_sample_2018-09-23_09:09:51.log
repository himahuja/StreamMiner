[09/23/2018 09:09:51 AM] Launching sm..
[09/23/2018 09:09:51 AM] Dataset: sub_sample.csv
[09/23/2018 09:09:51 AM] Output dir: /home/alex/Documents/streamminer/output
[09/23/2018 09:09:51 AM] Read data: (39, 7) sub_sample.csv
[09/23/2018 09:09:51 AM] Note: Found non-NA records: (39, 7)
[09/23/2018 09:09:51 AM] Reconstructing graph from /home/alex/Documents/streamminer/data/kg/_undir
[09/23/2018 09:09:51 AM] 

[09/23/2018 09:09:51 AM] => Loaded: undir_data.npy
[09/23/2018 09:09:51 AM] 

[09/23/2018 09:09:51 AM] => Loaded: undir_indptr.npy
[09/23/2018 09:09:51 AM] 

[09/23/2018 09:09:51 AM] => Loaded: undir_indices.npy
[09/23/2018 09:09:51 AM] 

[09/23/2018 09:09:51 AM] => Loaded: undir_indeg_vec.npy
[09/23/2018 09:09:51 AM] 

[09/23/2018 09:09:51 AM] => Graph loaded: 0.43 secs.

[09/23/2018 09:09:51 AM] 

[09/23/2018 09:09:51 AM] PID is: 599.0, with type: float64
[09/23/2018 09:09:56 AM] => Path extraction..(this can take a while)
[09/23/2018 09:09:56 AM] Filename: streamminerp.py


[09/23/2018 09:09:56 AM] Line #    Mem usage    Increment   Line Contents

[09/23/2018 09:09:56 AM] ================================================

[09/23/2018 09:09:56 AM]    236   1942.9 MiB   1942.9 MiB   @profile

[09/23/2018 09:09:56 AM]    237                             def extract_paths_sm(Gv, Gr, triples, y, features=None):

[09/23/2018 09:09:56 AM]    238   1943.1 MiB      0.2 MiB       with Manager() as manager:

[09/23/2018 09:09:56 AM]    239   1943.1 MiB      0.0 MiB           return_features = False

[09/23/2018 09:09:56 AM]    240   1943.1 MiB      0.0 MiB           if features is None:

[09/23/2018 09:09:56 AM]    241   1943.1 MiB      0.0 MiB               return_features = True

[09/23/2018 09:09:56 AM]    242   1943.1 MiB      0.0 MiB               features, pos_features, neg_features = manager.list(), manager.list(), manager.list()

[09/23/2018 09:09:56 AM]    243   1943.1 MiB      0.0 MiB           measurements = manager.list()

[09/23/2018 09:09:56 AM]    244                                 

[09/23/2018 09:09:56 AM]    245                                 #    for idx, triple in enumerate(tqdm(triples)):

[09/23/2018 09:09:56 AM]    246                                 #        sid, pid, oid = triple['sid'], triple['pid'], triple['oid']

[09/23/2018 09:09:56 AM]    247                                 #        label = y[idx]

[09/23/2018 09:09:56 AM]    248                                 #        triple_feature = dict()

[09/23/2018 09:09:56 AM]    249                                 #        discovered_paths = yenKSP(Gv, Gr, sid, pid, oid, K = 5)

[09/23/2018 09:09:56 AM]    250                                 #        for path in discovered_paths:

[09/23/2018 09:09:56 AM]    251                                 #            log.info("{}\n".format(path))

[09/23/2018 09:09:56 AM]    252                                 #            ff = tuple(path.relational_path)

[09/23/2018 09:09:56 AM]    253                                 #            if ff not in features:

[09/23/2018 09:09:56 AM]    254                                 #                features.add(ff)

[09/23/2018 09:09:56 AM]    255                                 #                if label == 1:

[09/23/2018 09:09:56 AM]    256                                 #                    pos_features.add(ff)

[09/23/2018 09:09:56 AM]    257                                 #                elif label == 0:

[09/23/2018 09:09:56 AM]    258                                 #                    neg_features.add(ff)

[09/23/2018 09:09:56 AM]    259                                 #                else:

[09/23/2018 09:09:56 AM]    260                                 #                    raise Exception("Unknown class label: {}".format(label))

[09/23/2018 09:09:56 AM]    261                                 #            triple_feature[ff] = triple_feature.get(ff, 0) + 1

[09/23/2018 09:09:56 AM]    262                                 #        measurements.append(triple_feature)

[09/23/2018 09:09:56 AM]    263                                 #        gc.collect()

[09/23/2018 09:09:56 AM]    264   1943.2 MiB      0.1 MiB           pool = Pool(6)

[09/23/2018 09:09:56 AM]    265   1943.2 MiB      0.0 MiB           pool.map(callYen, triples, features, pos_features, neg_features, measurements)

[09/23/2018 09:09:56 AM]    266   1943.2 MiB      0.0 MiB           features, pos_features, neg_features = set(features), set(pos_features), set(neg_features)

[09/23/2018 09:09:56 AM]    267   1943.2 MiB      0.0 MiB           if return_features:

[09/23/2018 09:09:56 AM]    268   1943.2 MiB      0.0 MiB               return features, pos_features, neg_features, measurements

[09/23/2018 09:09:56 AM]    269                                     return measurements

[09/23/2018 09:09:56 AM] 


[09/23/2018 09:09:56 AM] P: +:0, -:0, unique tot:0
